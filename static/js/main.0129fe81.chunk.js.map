{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","title","id","uuid","filter","task","item","find","newTasks","map","children","Task","useContext","removeTask","findItem","className","onClick","TaskList","length","key","TaskForm","addTask","clearList","editTask","setTitle","onSubmit","e","preventDefault","type","placeholder","required","onChange","target","Header","App","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAkBC,0BA0ChBC,EAvCiB,SAACC,GAC/B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GADzB,EAGfC,mBAASL,GAHM,mBAGlCM,EAHkC,KAG3BC,EAH2B,OAKTF,mBAAS,MALA,mBAKlCG,EALkC,KAKxBC,EALwB,KAOzCC,qBAAU,WACRP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC5C,CAACA,IAyBJ,OAAO,kBAACV,EAAgBiB,SAAjB,CAA0BC,MAAO,CAACR,EAvBzB,SAAAS,GACdR,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACS,QAAOC,GAAIC,mBAGf,SAAAD,GACjBT,EAASD,EAAMY,QAAO,SAAAC,GAAI,OAAIA,EAAKH,KAAOA,OAG1B,WAChBT,EAAS,KAGM,SAACS,GAChB,IAAMI,EAAOd,EAAMe,MAAK,SAAAF,GAAI,OAAIA,EAAKH,KAAOA,KAC5CP,EAAYW,IAGG,SAACL,EAAOC,GACvB,IAAMM,EAAWhB,EAAMiB,KAAI,SAAAJ,GAAI,OAAKA,EAAKH,KAAOA,EAAK,CAACD,QAAOC,MAAMG,KACnEZ,EAASe,GACTb,EAAY,OAGsFD,IACjGT,EAAMyB,WCvBIC,EAfF,SAAC,GAAY,IAAXN,EAAU,EAAVA,KAAU,EACmCO,qBAAW9B,GAD9C,mBACA+B,GADA,gBACuBC,GADvB,WAEvB,OACE,wBAAIC,UAAU,aACZ,8BAAOV,EAAKJ,OACZ,4BAAQe,QAAS,kBAAMH,EAAWR,EAAKH,KAAKa,UAAU,uBACpD,uBAAGA,UAAU,sBAEf,4BAAQC,QAAS,kBAAMF,EAAST,EAAKH,KAAKa,UAAU,qBAClD,uBAAGA,UAAU,kBCUNE,EAlBE,WAAO,IAAD,EACLL,qBAAW9B,GAApBU,EADc,oBAErB,OACE,6BACGA,EAAM0B,OACL,wBAAIH,UAAU,QACXvB,EAAMiB,KAAI,SAACJ,GACV,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMc,IAAKd,EAAKH,SAIvC,yBAAKa,UAAU,YAAf,cC4BOK,EAxCE,WAAO,IAAD,EACyDR,qBAAW9B,GADpE,mBACPuC,GADO,WACcC,GADd,WACmCC,GADnC,WAC6C7B,EAD7C,OAEKH,mBAAS,IAFd,mBAEdU,EAFc,KAEPuB,EAFO,KA6BrB,OARA5B,qBAAU,WAEN4B,EADC9B,EACQA,EAASO,MAET,MAEV,CAACP,IAGF,0BAAM+B,SArBa,SAAAC,GACnBA,EAAEC,iBACEjC,EAKF6B,EAAStB,EAAOP,EAASQ,KAJzBmB,EAAQpB,GACRuB,EAAS,MAiBmBT,UAAU,QACtC,2BAAOa,KAAK,OAAOb,UAAU,aAAac,YAAY,cAAcC,UAAQ,EAACC,SA3B5D,SAAAL,GACnBF,EAASE,EAAEM,OAAOhC,QA0BqFA,MAAOC,IAC5G,yBAAKc,UAAU,WACb,4BAAQa,KAAK,SAASb,UAAU,oBAAoBrB,EAAW,YAAc,YAC7E,4BAAQkC,KAAK,SAASb,UAAU,gBAAgBC,QAAS,kBAAMM,MAA/D,YC3BOW,EARA,WACb,OACE,yBAAKlB,UAAU,UACb,8CCkBSmB,G,MAhBH,WACV,OACE,kBAAC,EAAD,KACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,YCXZoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0129fe81.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\nexport const TaskListContext = createContext();\r\n// export const TaskListContext = createContext([{}, () => {}]);\r\n\r\nconst TaskListContextProvider = (props) => {\r\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || [];\r\n\r\n  const [tasks, setTasks] = useState(initialState);\r\n\r\n  const [editItem, setEditItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = title => {\r\n    setTasks([...tasks, {title, id: uuid()}]);\r\n  }\r\n\r\n  const removeTask = id => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  }\r\n\r\n  const clearList = () => {\r\n    setTasks([]);\r\n  }\r\n\r\n  const findItem = (id) => {\r\n    const item = tasks.find(task => task.id === id);\r\n    setEditItem(item);\r\n  }\r\n\r\n  const editTask = (title, id) => {\r\n    const newTasks = tasks.map(task => (task.id === id ? {title, id} : task));\r\n    setTasks(newTasks);\r\n    setEditItem(null);\r\n  }\r\n\r\n  return <TaskListContext.Provider value={[tasks, addTask, removeTask, clearList, findItem, editTask, editItem]}>\r\n    {props.children}\r\n  </TaskListContext.Provider>;\r\n}\r\n\r\nexport default TaskListContextProvider;","import React, { useContext } from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst Task = ({task}) => {\r\n  const [tasks, addTask, removeTask, clearList, findItem] = useContext(TaskListContext);\r\n  return (\r\n    <li className=\"list-item\">\r\n      <span>{task.title}</span>\r\n      <button onClick={() => removeTask(task.id)} className=\"btn-delete task-btn\">\r\n        <i className=\"fas fa-trash-alt\"></i>\r\n      </button>\r\n      <button onClick={() => findItem(task.id)} className=\"btn-edit task-btn\">\r\n        <i className=\"fas fa-pen\"></i>\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React, { useContext } from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n  const [tasks] = useContext(TaskListContext);\r\n  return (\r\n    <div>\r\n      {tasks.length ? (\r\n        <ul className=\"list\">\r\n          {tasks.map((task) => {\r\n            return <Task task={task} key={task.id} />;\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div className=\"no-tasks\">No Tasks</div>\r\n      )}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport {TaskListContext} from '../context/TaskListContext';\r\n\r\nconst TaskForm = () => {\r\n  const [tasks, addTask, removeTask, clearList, findItem, editTask, editItem] = useContext(TaskListContext);\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setTitle(e.target.value);\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(!editItem) {\r\n      addTask(title);\r\n      setTitle('');\r\n      // console.log(title);\r\n    } else {\r\n      editTask(title, editItem.id);\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(editItem) {\r\n      setTitle(editItem.title);\r\n    } else {\r\n      setTitle('');\r\n    }\r\n  }, [editItem]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form\">\r\n      <input type=\"text\" className=\"task-input\" placeholder=\"Add task...\" required onChange={handleChange} value={title} />\r\n      <div className=\"buttons\">\r\n        <button type=\"submit\" className=\"btn add-task-btn\">{editItem ? 'Edit task' : 'Add Task'}</button>\r\n        <button type=\"button\" className=\"btn clear-btn\" onClick={() => clearList()}>Clear</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Task Manager</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport TaskForm from './TaskForm';\r\nimport Header from './Header';\r\nimport TaskListContextProvider from '../context/TaskListContext';\r\nimport '../App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <TaskListContextProvider>\r\n      <div className=\"container\">\r\n        <div className=\"app-wrapper\">\r\n          <Header />\r\n          <div className=\"main\">\r\n            <TaskForm />\r\n            <TaskList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </TaskListContextProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}